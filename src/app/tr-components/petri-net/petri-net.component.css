.canvas {
    width: 100%;
    height: 70vh;
    border-style: dotted;
    border-color: lightgrey;
    transition: background-color 1s;
    user-select: none;
}

.place {
    fill: white;
    stroke: black;
    stroke-width: 2;
}

/* .place:hover {
    stroke: orange;
} */

.transition {
    fill: grey;
    stroke: black;
    stroke-width: 2;
}

.transition.active {
    fill: green;
}

/* .transition:hover {
    stroke: orange;
} */

.arc {
    fill: none;
    stroke: black;
    stroke-width: 2;
}

/* .arc:hover,
.background-arc:hover + .arc {
    stroke: orange;
} */

.background-arc {
    fill: none;
    stroke: transparent;
    opacity: 0;
    stroke-width: 12 !important;
}

.place-id{
    fill: black;
}

.token-label{
    fill: black;
}

.tansition-id{
    fill: grey;
}

.arc-weight{
    fill: black;
}

.arc-weight-background{
    fill: white;
    transition: fill 1s;
}

/**** PLAY MODE  ****/
/*
 * Adjusted styles for play mode
 * these take effect once the drawing area svg
 * has the play-mode class
 */
.canvas.play-mode {
    background-color: #c0bfbc;
}

.play-mode .arc-weight-background {
    fill: #c0bfbc;
}
.play-mode .transition.active {
    cursor: pointer;
}

/* text nodes that follow transitions (rects within svg) should not have different cursors in play mode
 * all interaction events should be caught in the wrapper group element */
.play-mode .transition.active ~ text {
    cursor: pointer;
}

/* Styles for 'move' and 'anchor' mode */
.anchor {
    fill:black;
    stroke: black;
    stroke-width: 0px;
}

.line-segment {
    stroke: transparent;
    stroke-width: 10;
}

.editable, .insertable {
    filter: drop-shadow(0 0 3px rgba(255, 0, 0, 1));
}

.editable:active, .anchor.active {
    stroke: red;
    stroke-width: 2;
}

.no-pointer-events {
    pointer-events: none;
}

.editable:hover, .anchor.active, .line-segment:hover {
    cursor: pointer;
}
